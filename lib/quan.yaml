# Quan's Minecraft Standard Cell Library
# 20 December 2015

library_name: quan

cells:
  input_pin:
    pins:
      Y:
        direction: output
        facing: east
        coordinates: [0, 0, 1]

    blocks: [[[69, 55]]]
    data:   [[[ 0,  0]]]

  output_pin:
    pins:
      A:
        direction: input
        facing: west
        coordinates: [0, 0, 0]

    blocks: [[[55, 123]]]
    data:   [[[ 0,   0]]]

  AND:
    pins:
      A:
        direction: input
        facing: west
        coordinates: [0, 0, 0]
      B:
        direction: input
        facing: west
        coordinates: [0, 2, 0]

      Y:
        direction: output
        facing: east
        coordinates: [0, 1, 3]
        function: "(A*B)"

    blocks: [[[55, 1,  0,  0],
              [ 0, 1, 76, 55],
              [55, 1,  0,  0]],
             [[ 0, 76,  0, 0],
              [ 0, 55,  0, 0],
              [ 0, 76,  0, 0]]]

    data:    [[[0, 0, 0, 0],
               [0, 0, 1, 0],
               [0, 0, 0, 0]],
              [[0, 5, 0, 0],
               [0, 0, 0, 0],
               [0, 5, 0, 0]]]

  XOR:
    pins:
      A:
        direction: input
        facing: west
        coordinates: [0, 0, 0]
      B:
        direction: input
        facing: west
        coordinates: [0, 2, 0]
      Y:
        direction: output
        facing: east
        coordinates: [0, 1, 5]
        function: "(A^B)"

    blocks: [[[55,  1, 76, 55,  1, 76],
              [ 0,  1,  1, 76,  0, 55],
              [55,  1, 76, 55,  1, 76]],
             [[ 0, 76,  0,  0, 55,  0],
              [ 0, 55, 55,  0,  0,  0],
              [ 0, 76,  0,  0, 55,  0]]]

    data:   [[[0,  0,  1,  0,  0,  1],
              [0,  0,  0,  1,  0,  0],
              [0,  0,  1,  0,  0,  1]],
             [[0,  5,  1,  0,  0,  0],
              [0,  0,  0,  0,  0,  0],
              [0,  5,  1,  0,  0,  0]]]

  NAND:
    pins:
      A:
        direction: input
        facing: west
        coordinates: [0, 0, 0]
      B:
        direction: input
        facing: west
        coordinates: [0, 2, 0]
      Y:
        direction: output
        facing: east
        coordinates: [0, 1, 2]
        function: "(A*B)'"

    blocks: [[[55,  1,  0],
              [ 0,  1, 55],
              [55,  1,  0]],
             [[ 0, 76,  0],
              [ 0, 55,  0],
              [ 0, 76,  0]]]

    data:   [[[0,  0,  0],
              [0,  0,  0],
              [0,  0,  0]],
             [[0,  5 , 0],
              [0,  0,  0],
              [0,  5,  0]]]

  NOT:
    pins:
      A:
        direction: input
        facing: west
        coordinates: [0, 0, 0]
      Y:
        direction: output
        facing: east
        coordinates: [0, 0, 3]
        function: "A'"

    blocks: [[[55, 1, 76, 55]]]

    data:   [[[ 0, 0,  1,  0]]]

  DFF:
    pins:
      C:
        direction: input
        facing: west
        coordinates: [0, 0, 0]
        clock: true
      D:
        direction: input
        facing: west
        coordinates: [0, 2, 0]
      Q:
        direction: output
        facing: east
        coordinates: [0, 2, 3]
        function: "IQ"

    ff:
      noninverting: "IQ"
      inverting: "IQN"
      clocked_on: "C"
      next_state: "D"

    blocks: [[[55,  1, 76,  0],
              [ 0, 93, 94,  0],
              [55, 93, 93, 55]]]

    data:   [[[ 0,  0,  1, 0],
              [ 0,  2,  2, 0],
              [ 0,  1,  1, 0]]]
